---
################### Get workshop nodes info ###################

- name: grab facts for Gitlab
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_gitlab": "{{ec2_name_prefix}}-gitlab"
  register: gitlab_node_facts

- name: grab facts for devnode node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_devnode": "{{ec2_name_prefix}}-devnode"
  register: devnode_node_facts

- name: grab facts for qanode node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_qanode": "{{ec2_name_prefix}}-qanode"
  register: qanode_node_facts

- name: grab facts for prodnode1 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_prodnode1": "{{ec2_name_prefix}}-prodnode1"
  register: prodnode1_node_facts

- name: grab facts for prodnode2 node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_prodnode2": "{{ec2_name_prefix}}-prodnode2"
  register: prodnode2_node_facts

- name: grab facts for Jenkins node
  ec2_instance_info:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_jenkins": "{{ec2_name_prefix}}-jenkins"
  register: jenkins_node_facts

################### Create inventories ###################

- name: GitLab | Add new instance to host group
  add_host:
    hostname: 'gitlab'
    short_name: "{{ item.tags.short_name }}"
    username: "{{ item.tags.username }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ ec2_name_prefix }}/{{ ec2_name_prefix }}-private.pem"
    ansible_host: "{{ item.public_ip_address }}"
    private_ip: "{{ item.private_ip_address }}"
    groups:
      - gitlab
  with_items: "{{ gitlab_node_facts.instances }}"

- name: add hosts to dev groups
  add_host:
    name: "{{ item.tags.Name }}"
    username: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    groups: dev
  with_items:
    - "{{ devnode_node_facts.instances }}"
  changed_when: false

- name: add hosts to groups qa
  add_host:
    name: "{{ item.tags.Name }}"
    username: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    groups: qa
  with_items:
    - "{{ qanode_node_facts.instances }}"
  changed_when: false

- name: add hosts to groups prod
  add_host:
    name: "{{ item.tags.Name }}"
    username: "{{ item.tags.Student }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    groups: prod
  with_items:
    - "{{ prodnode1_node_facts.instances }}"
    - "{{ prodnode2_node_facts.instances }}"
  changed_when: false
################### Write inventories ###################

- name: Generate instructor inventory
  template:
    src: instructor_inventory_cicd.j2
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/instructor_inventory.txt"

- name: Generate student etchosts
  template:
    src: etchosts_cicd.j2
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/student{{item}}-etchosts.txt"
  with_sequence: count="{{ student_total }}"

- name: Generate student inventories
  template:
    src: cicd_instances.txt.j2
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/student{{item}}-instances.txt"
  with_sequence: count="{{ student_total }}"
